/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package startgourmet7;

import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.net.URL;
import java.net.URLConnection;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import static startgourmet7.ManipulaZip.unZip;

/**
 *
 * @author mario
 */
public class WebStartGourmet7 extends javax.swing.JFrame {

    /**
     * Creates new form WebStartGourmet7
     */
    public WebStartGourmet7() {
        initComponents();
    }

    private void fazBackupSysBd() {
        try {
            LocalShell shell = new LocalShell();
            //Cria a Pasta de Backup
            File backup = new File(System.getProperty("user.home") + "/backup/");
            backup.mkdir();

            //Executa backup pasta Sistema
            String pastaSystema = System.getProperty("user.home") + "/gourmet7/";
            String pastaBackup = System.getProperty("user.home") + "/backup/";
            shell.executeCommand("cp -r " + pastaSystema + " " + pastaBackup);

            //Executa backup banco
            shell.executeCommand("pg_dump gourmet7 -h 192.168.0.187 -U postgres > /home/mario/backup/backup.sql");
            shell.executeCommand("pkg1522pam");

        } catch (IOException ex) {
            ex.printStackTrace();
        }
    }

    private void updateSysBd() {
        try {
            LocalShell shell = new LocalShell();
            //Cria pasta Sistema
            File gourmet7 = new File(System.getProperty("user.home") + "/gourmet7/");
            gourmet7.mkdir();

            //Download Arquivos
            String caminho = "http://192.168.0.8:8080/exfood/img/res/res.zip";
            String pastaENameArq = gourmet7.getPath() + "/res.zip";
            fazDownload(caminho, pastaENameArq);
            unZip(new File(gourmet7.getPath() + "/res.zip"));
            Database.create("gourmet7", "postgres", "pkg1522pam");
            //Executa o jar 
            shell.executeCommand("/opt/jdk1.8/bin/java -jar " + gourmet7.getPath() + "/xml.jar ");
            System.exit(0);
        } catch (IOException ex) {
            restoreBd();
            ex.printStackTrace();
        } catch (SQLException ex) {
            restoreBd();
            ex.printStackTrace();
        }
    }

    private void fazDownload(String urlArquivo, String caminhoEName) {
        String protocolo = "http";
        String endereco = "moacirrf.com.br";
        String arquivo = "/arquivos/JSFImmediate.zip";

        try {
            //cria URL
//            URL url1 = new URL(protocolo, endereco, arquivo);
            URL url1 = new URL(urlArquivo);
            //abre uma conexao na url criada àcima
            URLConnection con = url1.openConnection();

            //tenta conectar.
            con.connect();

            //arquivo de saida
//            FileOutputStream fileOut = new FileOutputStream("/home/mario/teste/JSFImmediate.zip");
            FileOutputStream fileOut = new FileOutputStream(caminhoEName);

            int c = 0;

            do {
                //le o byte
                c = con.getInputStream().read();

                //escreve o byte no arquivo saida
                fileOut.write(c);

            } while (c != -1);

            //fecha o arquivo de saida
            fileOut.close();

            System.out.println("Arquivo baixado com sucesso");
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("Faz Backup BD e Projeto");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Faz Atualização Projeto e Scripts");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Restore BD ");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, 376, Short.MAX_VALUE)
                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jButton1)
                .addGap(18, 18, 18)
                .addComponent(jButton2)
                .addGap(18, 18, 18)
                .addComponent(jButton3)
                .addContainerGap(21, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
//        updateSysBd();
        fazBackupSysBd();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        updateSysBd();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        restoreBd();
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(WebStartGourmet7.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(WebStartGourmet7.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(WebStartGourmet7.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(WebStartGourmet7.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new WebStartGourmet7().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    // End of variables declaration//GEN-END:variables

    private void restoreBd() {
        try {
            LocalShell shell = new LocalShell();
            //Restaura o bd passa o caminho do arquivo .sql
            shell.executeCommand("psql gourmet7 -h 192.168.0.187 -U postgres < /home/mario/backup/backup.sql");
        } catch (IOException ex) {
            ex.printStackTrace();
        }

    }
}
